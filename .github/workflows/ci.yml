name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  schedule:
  - cron:  '0 6 * * SAT'

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        lfs: true
    - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        lfs: true
    - run: cargo clippy --all-targets --all-features --features bullet/cpu -- -D warnings

  audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        lfs: true
    - run: cargo install --force cargo-audit
    - run: cargo generate-lockfile
    - run: cargo audit

  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        lfs: true
    - run: cargo check --all-targets --all-features --features bullet/cpu --workspace

  doc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        lfs: true
    - run: cargo doc --all-features --workspace --features bullet/cpu --no-deps

  test:
    needs: [fmt, clippy, audit, check, doc]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v5
      with:
        lfs: true
    - run: cargo test --all-targets --all-features --features bullet/cpu --workspace

  sanitize:
    needs: [test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sanitizer: [address, leak, memory, thread]
    steps:
    - uses: actions/checkout@v5
      with:
        lfs: true
    - run: cargo test --lib --all-features --features bullet/cpu --workspace --target x86_64-unknown-linux-gnu -Zbuild-std -Zunstable-options --config='build.rustflags = ["-Zsanitizer=${{ matrix.sanitizer }}"]' -- --test-threads=1
      env:
        CC: "clang"
        CFLAGS: "-fsanitize=${{ matrix.sanitizer }}"
        PROPTEST_CASES: 32

  coverage:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        lfs: true
    - run: cargo install --force cargo-llvm-cov
    - run: cargo llvm-cov --lib --all-features --features bullet/cpu --workspace --lcov --output-path lcov.info
      env:
        PROPTEST_CASES: 32
    - uses: codecov/codecov-action@v5
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        files: lcov.info
        fail_ci_if_error: true

  dist:
    needs: [fmt, clippy, audit, check, doc]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v5
      with:
        lfs: true
    - run: cargo install --force cargo-pgo
    - run: make linux-x86-64-sse4 linux-x86-64-avx2
      if: runner.os == 'Linux'
    - run: make windows-x86-64-sse4 windows-x86-64-avx2
      if: runner.os == 'Windows'
    - run: make mac-aarch64-neon mac-aarch64-sme
      if: runner.os == 'macOS'
